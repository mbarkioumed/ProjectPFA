package ${packageName}.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.tags.Tag;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.Arrays;
import java.util.List;

/**
 * Enhanced OpenAPI 3.0 configuration for ${projectName} API
 * Generated by Spring Boot API Generator
 */
@Configuration
public class OpenApiConfig {

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .info(apiInfo())
                .servers(serversList())
                .tags(tagsList());
    }

    private Info apiInfo() {
        return new Info()
                .title("${projectName} REST API")
                .description("Comprehensive API for ${projectName} application with full CRUD operations")
                .version("1.0.0")
                .contact(apiContact())
                .license(apiLicense());
    }

    private Contact apiContact() {
        return new Contact()
                .name("API Support Team")
                .email("support@example.com")
                .url("https://www.example.com/support");
    }

    private License apiLicense() {
        return new License()
                .name("MIT License")
                .url("https://opensource.org/licenses/MIT");
    }

    private List<Server> serversList() {
        Server developmentServer = new Server()
                .url("http://localhost:8080")
                .description("Development server");
        
        Server productionServer = new Server()
                .url("https://api.example.com")
                .description("Production server");

        return Arrays.asList(developmentServer, productionServer);
    }    private List<Tag> tagsList() {
        return Arrays.asList(
<#list entities as entity>
            new Tag()
                .name("${entity.name?lower_case}")
                .description("Operations related to ${entity.name} management")<#if entity?has_next>,</#if>
</#list>
        );
    }
}
